paths:
  /user/token:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/token'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/create:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/create'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/challenge:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/user/challenge'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /user/list/{companyName}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/user/list/{companyName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

  /user:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/user'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.querystring.email: method.request.querystring.email

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/user'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.querystring.email: method.request.querystring.email

    patch:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PATCH
        uri: '${uri}/user'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.querystring.email: method.request.querystring.email
          integration.request.querystring.enable: integration.request.querystring.enable

  /company/{companyName}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/company/{companyName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/company/{companyName}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.companyName: method.request.path.companyName

  /company:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/company'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/company'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    put:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: PUT
        uri: '${uri}/company'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /currency/{currencyCode}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/currency/{currencyCode}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.currencyCode: method.request.path.currencyCode

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/currency/{currencyCode}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.currencyCode: method.request.path.currencyCode

  /currency:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/currency'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/currency'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /merchant-acquirer:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/merchant-acquirer'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/merchant-acquirer'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/merchant-acquirer'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /acquirer/{acquirerId}:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/acquirer/{acquirerId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.acquirerId: method.request.path.acquirerId

    delete:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: DELETE
        uri: '${uri}/acquirer/{acquirerId}'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"
          integration.request.path.acquirerId: method.request.path.acquirerId

  /acquirer:
    get:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: GET
        uri: '${uri}/acquirer'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/acquirer'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

  /transaction:
    post:
      x-amazon-apigateway-integration:
        connectionType: ${connectionType}
        connectionId: ${connectionId}
        type: ${type}
        httpMethod: POST
        uri: '${uri}/transaction'
        passthroughBehavior: ${passthroughBehavior}
        requestParameters:
          integration.request.header.Accept: "' '"

components:
  securitySchemes:
    apiKeyAuth:
      x-amazon-apigateway-authtype: ${x-amazon-apigateway-authtype}
      x-amazon-apigateway-authorizer:
        ${x-amazon-apigateway-authorizer}

x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
