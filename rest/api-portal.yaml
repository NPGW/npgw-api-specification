openapi: 3.0.3

info:
  title: NPGW Portal API
  version: 0.1.2

servers:
  - url: https://npgw.xyz/portal-v1/

paths:
  /user/token:
    post:
      operationId: getToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthorization'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '../api-merchant.yaml#/components/schemas/ResponseToken'
          description: Everything works as expected.
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/create:
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreation'
        required: true
      responses:
        '204':
          description: Everything works as expected.
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/challenge:
    post:
      operationId: challengeUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChallenge'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/list/{companyName}:
    get:
      operationId: getUserList
      parameters:
        - description: Company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user:
    get:
      operationId: getUser
      parameters:
        - description: Company name
          in: query
          name: companyName
          required: true
          schema:
            type: string
        - description: Username
          in: query
          name: userName
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/UserDetails'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteUser
      parameters:
        - description: Company name
          in: query
          name: companyName
          required: true
          schema:
            type: string
        - description: Username
          in: query
          name: userName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    patch:
      operationId: changeUser
      parameters:
        - description: Company name
          in: query
          name: companyName
          required: true
          schema:
            type: string
        - description: Username
          in: query
          name: userName
          required: true
          schema:
            type: string
        - in: query
          name: action
          required: true
          schema:
            $ref: '#/components/schemas/UserAction'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company/{companyName}:
    get:
      operationId: getCompany
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteCompany
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company:
    get:
      operationId: getCompanyList
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyList'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        description: New company
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Created company
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'
    put:
      operationId: updateCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        description: Updated company
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Created company
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /currency/{currencyCode}:
    delete:
      operationId: deleteCurrency
      parameters:
        - description: The currency code
          in: path
          name: currencyCode
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    get:
      operationId: getOneCurrency
      parameters:
        - description: The currency code
          in: path
          name: currencyCode
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
          description: Get currency by code
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /currency:
    get:
      operationId: getAllCurrency
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyList'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createOrUpdateCurrency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
        description: New record
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /merchant-acquirer:
    delete:
      operationId: deleteMerchantAcquirer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAcquirerID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    get:
      operationId: getAllMerchantAcquirer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAcquirerList'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createOrUpdateMerchantAcquirer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAcquirer'
        description: New record
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /acquirer/{acquirerId}:
    get:
      operationId: getOneAcquirer
      parameters:
        - description: The acquirer id
          in: path
          name: acquirerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteAcquirer
      parameters:
        - description: The acquirer id
          in: path
          name: acquirerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /acquirer:
    get:
      operationId: getAllAcquirer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcquirerList'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createOrUpdateAcquirer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Acquirer'
        description: New acquirer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Created acquirer
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /transaction:
    post:
      operationId: getTransactionList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionFilter'
      parameters:
        - in: header
          name: x-page-limit
          schema:
            type: integer
            default: 20
        - in: header
          name: x-page-start-id
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

components:
  schemas:
    UserChallengeType:
      type: string
      description: |
        SUCCESS - authorized.
        NEW_PASSWORD_REQUIRED - you need to change your password.
      enum:
        - SUCCESS
        - NEW_PASSWORD_REQUIRED

    ResponseUserChallenge:
      type: object
      required:
        - challengeType
      properties:
        userChallengeType:
          $ref: '#/components/schemas/UserChallengeType'
        sessionId:
          type: string
          description: Session id.

    UserChallenge:
      allOf:
        - $ref: '#/components/schemas/ResponseUserChallenge'
        - type: object
          required:
            - companyName
          properties:
            companyName:
              type: string
            data:
              type: string
              description: Data to support a specific challenge.

    ResponseUserToken:
      allOf:
        - $ref: '#/components/schemas/ResponseUserChallenge'
        - type: object
          properties:
            token:
              $ref: '../api-merchant.yaml#/components/schemas/ResponseToken'

    UserRole:
      type: string
      description: |
        SUPER_ADMIN - can control all users in the system.
        ADMIN - can control all users in the company.
        USER - has access to analytics.
      enum:
        - SUPER_ADMIN
        - ADMIN
        - USER

    UserAction:
      type: string
      description: |
        disable - disable the user.
        enable - enable the user.
        reset - reset password.
      enum:
        - disable
        - enable
        - reset

    User:
      type: object
      required:
        - companyName
        - name
      properties:
        companyName:
          type: string
        name:
          type: string

    UserAuthorization:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - password
          properties:
            password:
              type: string

    UserCreation:
      allOf:
        - $ref: '#/components/schemas/UserAuthorization'
        - type: object
          required:
            - userRole
          properties:
            email:
              type: string
            userRole:
              type: UserRole
            merchantList:
              type: array
              items:
                type: string

    UserDetails:
      allOf:
        - $ref: '#/components/schemas/UserCreation'
        - type: object
          properties:
            enabled:
              type: boolean

    UserList:
      type: array
      items:
        $ref: '#/components/schemas/UserDetails'

    Currency:
      type: object
      required:
        - currencyCode
        - currencyName
        - isBaseCurrency
        - limitMax
        - limitMin
      properties:
        currencyCode:
          $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        currencyName:
          type: string
        limitMin:
          format: double
          type: number
        limitMax:
          format: double
          type: number
        isBaseCurrency:
          type: boolean
        updatedOn:
          format: date-time
          type: string

    CurrencyList:
      type: array
      items:
        $ref: '#/components/schemas/Currency'

    ActiveStatus:
      type: string
      description: status
      enum:
        - ACTIVE
        - INACTIVE

    MerchantAcquirerID:
      type: object
      properties:
        merchantId:
          type: string
        priority:
          type: integer

    MerchantAcquirer:
      type: object
      properties:
        merchantId:
          type: string
        priority:
          type: integer
        activeStatus:
          $ref: '#/components/schemas/ActiveStatus'
        currencyCodeList:
          type: array
          items:
            $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        acquirerCode:
          type: string
        acquirerConfig:
          type: string

    MerchantAcquirerList:
      type: array
      items:
        $ref: '#/components/schemas/MerchantAcquirer'

    Merchant:
      type: object
      properties:
        name:
          type: string
        merchantId:
          type: string
        createdOn:
          format: date-time
          type: string
          description: Created time.
          example: 2022-04-08T11:11:59.711Z
        updatedOn:
          format: date-time
          type: string
          description: Updated time.
          example: 2022-04-08T11:11:59.711Z
        currencyCodeList:
          type: array
          items:
            $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        activeStatus:
          $ref: '#/components/schemas/ActiveStatus'

    Company:
      type: object
      properties:
        companyName:
          type: string
        companyTitle:
          type: string
        companyType:
          type: string
        companyAddress:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        mobile:
          type: string
        fax:
          type: string
        description:
          type: string
        website:
          type: string
        primaryContact:
          type: string
        email:
          type: string
        createdOn:
          format: date-time
          type: string
          description: Created time.
          example: 2022-04-08T11:11:59.711Z
        updatedOn:
          format: date-time
          type: string
          description: Updated time.
          example: 2022-04-08T11:11:59.711Z
        activeStatus:
          $ref: '#/components/schemas/ActiveStatus'
        merchantList:
          type: array
          items:
            $ref: '#/components/schemas/Merchant'

    CompanyList:
      type: array
      items:
        $ref: '#/components/schemas/Company'

    Acquirer:
      type: object
      properties:
        acquirerId:
          type: string
        acquirerName:
          type: string
        apiProtocol:
          type: string
        apiDomain:
          type: string
        priority:
          type: integer
        createdOn:
          format: date-time
          type: string
          description: Created time.
          example: 2022-04-08T11:11:59.711Z
        updatedOn:
          format: date-time
          type: string
          description: Updated time.
          example: 2022-04-08T11:11:59.711Z
        activeStatus:
          $ref: '#/components/schemas/ActiveStatus'

    AcquirerList:
      type: array
      items:
        $ref: '#/components/schemas/Acquirer'

    TransactionFilter:
      type: object
      properties:
        merchantId:
          type: string

    TransactionReport:
      allOf:
        - $ref: '../api-merchant.yaml#/components/schemas/TransactionResponse'
        - type: object

    TransactionList:
      type: array
      items:
        $ref:  '#/components/schemas/TransactionReport'
