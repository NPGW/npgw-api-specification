openapi: 3.0.3

info:
  title: NPGW Portal API
  version: 0.1.2

servers:
  - url: https://npgw.xyz/portal-v1/

paths:
  /user/token:
    post:
      operationId: getToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthorization'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserToken'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/create:
    post:
      operationId: createUser
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreation'
        required: true
      responses:
        '204':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/challenge:
    post:
      operationId: challengeUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserChallenge'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/reset:
    post:
      operationId: resetUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthorization'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user/list/{companyName}:
    get:
      operationId: getAllUsers
      security:
        - apiKeyAuth: []
      parameters:
        - description: Company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetails'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /user:
    get:
      operationId: getOneUser
      security:
        - apiKeyAuth: []
      parameters:
        - description: Email
          in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteUser
      security:
        - apiKeyAuth: []
      parameters:
        - description: Email
          in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    patch:
      operationId: enableUser
      security:
        - apiKeyAuth: []
      parameters:
        - description: Email
          in: query
          name: email
          required: true
          schema:
            type: string
        - description: Enable
          in: query
          name: enable
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company/{companyName}:
    get:
      operationId: getOneCompany
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteCompany
      security:
        - apiKeyAuth: []
      parameters:
        - description: The company name
          in: path
          name: companyName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /company:
    get:
      operationId: getAllCompanies
      security:
        - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createCompany
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        description: New company
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    put:
      operationId: updateCompany
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        description: Updated company
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /currency/{currencyCode}:
    get:
      operationId: getOneCurrency
      parameters:
        - description: The currency code
          in: path
          name: currencyCode
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
          description: Get currency by code
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteCurrency
      parameters:
        - description: The currency code
          in: path
          name: currencyCode
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /currency:
    get:
      operationId: getAllCurrency
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createOrUpdateCurrency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
        description: New record
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /merchant-acquirer:
    get:
      operationId: getAllMerchantAcquirers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteMerchantAcquirer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAcquirerID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createOrUpdateMerchantAcquirer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAcquirer'
        description: New record
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAcquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /acquirer/{acquirerId}:
    get:
      operationId: getOneAcquirer
      parameters:
        - description: The acquirer id
          in: path
          name: acquirerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    delete:
      operationId: deleteAcquirer
      parameters:
        - description: The acquirer id
          in: path
          name: acquirerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../api-merchant.yaml#/components/responses/NotFound'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /acquirer:
    get:
      operationId: getAllAcquirers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Acquirer'
          description: Ok
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

    post:
      operationId: createOrUpdateAcquirer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Acquirer'
        description: New acquirer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquirer'
          description: Created acquirer
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

  /transaction:
    post:
      operationId: getTransactionList
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionFilter'
      parameters:
        - in: query
          name: from
          schema:
            type: integer
            default: 1
        - in: query
          name: size
          schema:
            type: integer
            default: 30
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref:  '../api-merchant.yaml#/components/schemas/TransactionResponse'
          description: Ok
        '400':
          $ref: '../api-merchant.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../api-merchant.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../api-merchant.yaml#/components/responses/Forbidden'
        '405':
          $ref: '../api-merchant.yaml#/components/responses/NotAllowed'
        '406':
          $ref: '../api-merchant.yaml#/components/responses/NotAcceptable'
        '422':
          $ref: '../api-merchant.yaml#/components/responses/Validation'
        '429':
          $ref: '../api-merchant.yaml#/components/responses/TooManyRequests'
        '500':
          $ref: '../api-merchant.yaml#/components/responses/Error'

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: JWT-based authentication where the token is passed in the Authorization header.

  schemas:
    UserChallengeType:
      type: string
      description: |
        NONE - none.
        NEW_PASSWORD_REQUIRED - you need to change your password.
      enum:
        - NONE
        - NEW_PASSWORD_REQUIRED

    UserChallenge:
      type: object
      required:
        - userChallengeType
      properties:
        userChallengeType:
          $ref: '#/components/schemas/UserChallengeType'
        sessionId:
          type: string
          description: Challenge session id.

    RequestUserChallenge:
      allOf:
        - $ref: '#/components/schemas/UserChallenge'
        - type: object
          required:
            - sessionId
            - companyName
          properties:
            companyName:
              type: string
            data:
              $ref: '#/components/schemas/UserAuthorization'

    ResponseUserToken:
      allOf:
        - $ref: '#/components/schemas/UserChallenge'
        - type: object
          properties:
            token:
              $ref: '../api-merchant.yaml#/components/schemas/ResponseToken'

    UserRole:
      type: string
      description: |
        SUPER - can control all users in the system.
        ADMIN - can control all users in the company.
        USER - has access to analytics.
      enum:
        - SUPER
        - ADMIN
        - USER

    UserAuthorization:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    UserCreation:
      allOf:
        - $ref: '#/components/schemas/UserAuthorization'
        - type: object
          required:
            - companyName
            - userRole
          properties:
            companyName:
              type: string
            userRole:
              $ref: '#/components/schemas/UserRole'
            merchantIds:
              type: array
              items:
                type: string

    UserDetails:
      allOf:
        - $ref: '#/components/schemas/UserCreation'
        - type: object
          properties:
            enabled:
              type: boolean

    Currency:
      type: object
      required:
        - currencyCode
        - currencyName
        - isBaseCurrency
        - limitMax
        - limitMin
      properties:
        currencyCode:
          $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        currencyName:
          type: string
        limitMin:
          format: double
          type: number
        limitMax:
          format: double
          type: number
        isBaseCurrency:
          type: boolean
        updatedOn:
          format: date-time
          type: string

    ActiveStatus:
      type: string
      description: status
      enum:
        - ACTIVE
        - INACTIVE

    MerchantAcquirerID:
      type: object
      properties:
        merchantId:
          type: string
        priority:
          type: integer

    MerchantAcquirer:
      type: object
      properties:
        merchantId:
          type: string
        priority:
          type: integer
        activeStatus:
          $ref: '#/components/schemas/ActiveStatus'
        currencyCodeList:
          type: array
          items:
            $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'
        acquirerCode:
          type: string
        acquirerConfig:
          type: string

    Merchant:
      type: object
      properties:
        merchantId:
          type: string
        merchantName:
          type: string
        currencyCodeList:
          type: array
          items:
            $ref: '../api-merchant.yaml#/components/schemas/CurrencyCode'

    CompanyAddress:
      type: object
      properties:
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        mobile:
          type: string
        fax:
          type: string

    Company:
      type: object
      required:
        - companyName
      properties:
        companyName:
          type: string
        companyTitle:
          type: string
        companyType:
          type: string
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        description:
          type: string
        website:
          type: string
        primaryContact:
          type: string
        email:
          type: string
        activeStatus:
          $ref: '#/components/schemas/ActiveStatus'
        merchantList:
          type: array
          items:
            $ref: '#/components/schemas/Merchant'

    Acquirer:
      type: object
      properties:
        acquirerId:
          type: string
        acquirerName:
          type: string
        apiProtocol:
          type: string
        apiDomain:
          type: string
        priority:
          type: integer
        activeStatus:
          $ref: '#/components/schemas/ActiveStatus'

    TransactionFilter:
      type: object
      required:
        - merchantId
      properties:
        merchantId:
          type: string
